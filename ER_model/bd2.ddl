-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2025-03-14 10:43:09 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE classes (
    class_id            INTEGER NOT NULL,
    time                DATE NOT NULL,
    day_of_week         INTEGER NOT NULL,
    group_nr            INTEGER NOT NULL,
    students_student_id INTEGER,
    courses_course_id   INTEGER,
    classroom           INTEGER NOT NULL,
    course_type         VARCHAR2(50) NOT NULL
);

ALTER TABLE classes ADD CONSTRAINT classes_pk PRIMARY KEY ( class_id );

CREATE TABLE completion_requirements (
    completion_req_id INTEGER NOT NULL,
    min_score         INTEGER NOT NULL,
    is_mandatory      NUMBER,
    type              VARCHAR2(50) NOT NULL
);

ALTER TABLE completion_requirements ADD CONSTRAINT completion_requirements_pk PRIMARY KEY ( completion_req_id );

CREATE TABLE cours_requirement (
    courses_course_id                         INTEGER NOT NULL, 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    completion_requirements_completion_req_id INTEGER NOT NULL
);

ALTER TABLE cours_requirement ADD CONSTRAINT cours_requirement_pk PRIMARY KEY ( courses_course_id,
                                                                                completion_requirements_completion_req_id );

CREATE TABLE course_registrations (
    course_reg_id     INTEGER NOT NULL,
    status            NUMBER NOT NULL,
    courses_course_id INTEGER NOT NULL
);

ALTER TABLE course_registrations ADD CONSTRAINT course_registrations_pk PRIMARY KEY ( course_reg_id );

CREATE TABLE courses (
    course_id   INTEGER NOT NULL,
    name        VARCHAR2(50) NOT NULL,
    ects_points INTEGER NOT NULL
);

ALTER TABLE courses ADD CONSTRAINT courses_pk PRIMARY KEY ( course_id );

CREATE TABLE courses_lectures (
    courses_course_id INTEGER NOT NULL,
    lecturers_user_id INTEGER NOT NULL
);

ALTER TABLE courses_lectures ADD CONSTRAINT courses_lectures_pk PRIMARY KEY ( courses_course_id,
                                                                              lecturers_user_id );

CREATE TABLE courses_special (
    courses_course_id                 INTEGER NOT NULL, 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    specializations_specialization_id INTEGER NOT NULL
);

ALTER TABLE courses_special ADD CONSTRAINT courses_special_pk PRIMARY KEY ( courses_course_id,
                                                                            specializations_specialization_id );

CREATE TABLE grades (
    grade_id             INTEGER NOT NULL,
    grade                INTEGER NOT NULL,
    recorded_date        DATE,
    lecturers_lecture_id INTEGER,
    courses_course_id    INTEGER,
    students_student_id  INTEGER,
    type                 VARCHAR2(50) NOT NULL
);

ALTER TABLE grades ADD CONSTRAINT grades_pk PRIMARY KEY ( grade_id );

CREATE TABLE lecturers (
    user_id        INTEGER NOT NULL,
    lecture_id     INTEGER NOT NULL,
    academic_title VARCHAR2(80)
);

ALTER TABLE lecturers ADD CONSTRAINT lecturers_pk PRIMARY KEY ( user_id );

ALTER TABLE lecturers ADD CONSTRAINT lecturers_pkv1 UNIQUE ( lecture_id );

CREATE TABLE roles (
    role_id INTEGER NOT NULL,
    name    VARCHAR2(50) NOT NULL
);

ALTER TABLE roles ADD CONSTRAINT roles_pk PRIMARY KEY ( role_id );

CREATE TABLE semester_ects (
    semestr_ects_id                   INTEGER NOT NULL,
    semestr                           INTEGER NOT NULL,
    ects_number                       INTEGER, 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    specializations_specialization_id INTEGER NOT NULL
);

ALTER TABLE semester_ects ADD CONSTRAINT semester_ects_pk PRIMARY KEY ( semestr_ects_id );

CREATE TABLE specializations (
    specialization_id INTEGER NOT NULL,
    name              VARCHAR2(50) NOT NULL
);

ALTER TABLE specializations ADD CONSTRAINT specializations_pk PRIMARY KEY ( specialization_id );

CREATE TABLE student_special ( 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    specializations_specialization_id INTEGER NOT NULL,
    students_user_id                  INTEGER NOT NULL
);

ALTER TABLE student_special ADD CONSTRAINT student_special_pk PRIMARY KEY ( specializations_specialization_id,
                                                                            students_user_id );

CREATE TABLE students (
    user_id             INTEGER NOT NULL,
    student_id          INTEGER NOT NULL,
    student_number      VARCHAR2(50) NOT NULL,
    status              NUMBER NOT NULL,
    library_card_number VARCHAR2(50)
);

ALTER TABLE students ADD CONSTRAINT students_pk PRIMARY KEY ( user_id );

ALTER TABLE students ADD CONSTRAINT students_pkv1 UNIQUE ( student_id );

CREATE TABLE users (
    user_id              INTEGER NOT NULL,
    first_name           VARCHAR2(50) NOT NULL,
    last_name            VARCHAR2(50) NOT NULL,
    email                VARCHAR2(50) NOT NULL,
    password             VARCHAR2(50) NOT NULL,
    roles_role_id        INTEGER,
    lecturers_lecture_id INTEGER NOT NULL
);

CREATE UNIQUE INDEX users__idx ON
    users (
        lecturers_lecture_id
    ASC );

ALTER TABLE users ADD CONSTRAINT users_pk PRIMARY KEY ( user_id );

ALTER TABLE classes
    ADD CONSTRAINT classes_courses_fk FOREIGN KEY ( courses_course_id )
        REFERENCES courses ( course_id );

ALTER TABLE classes
    ADD CONSTRAINT classes_students_fk FOREIGN KEY ( students_student_id )
        REFERENCES students ( student_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE cours_requirement
    ADD CONSTRAINT cours_requirement_completion_requirements_fk FOREIGN KEY ( completion_requirements_completion_req_id )
        REFERENCES completion_requirements ( completion_req_id );

ALTER TABLE cours_requirement
    ADD CONSTRAINT cours_requirement_courses_fk FOREIGN KEY ( courses_course_id )
        REFERENCES courses ( course_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE course_registrations
    ADD CONSTRAINT course_registrations_courses_fk FOREIGN KEY ( courses_course_id )
        REFERENCES courses ( course_id );

ALTER TABLE courses_lectures
    ADD CONSTRAINT courses_lectures_courses_fk FOREIGN KEY ( courses_course_id )
        REFERENCES courses ( course_id );

ALTER TABLE courses_lectures
    ADD CONSTRAINT courses_lectures_lecturers_fk FOREIGN KEY ( lecturers_user_id )
        REFERENCES lecturers ( user_id );

ALTER TABLE courses_special
    ADD CONSTRAINT courses_special_courses_fk FOREIGN KEY ( courses_course_id )
        REFERENCES courses ( course_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE courses_special
    ADD CONSTRAINT courses_special_specializations_fk FOREIGN KEY ( specializations_specialization_id )
        REFERENCES specializations ( specialization_id );

ALTER TABLE grades
    ADD CONSTRAINT grades_courses_fk FOREIGN KEY ( courses_course_id )
        REFERENCES courses ( course_id );

ALTER TABLE grades
    ADD CONSTRAINT grades_lecturers_fk FOREIGN KEY ( lecturers_lecture_id )
        REFERENCES lecturers ( lecture_id );

ALTER TABLE grades
    ADD CONSTRAINT grades_students_fk FOREIGN KEY ( students_student_id )
        REFERENCES students ( student_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE semester_ects
    ADD CONSTRAINT semester_ects_specializations_fk FOREIGN KEY ( specializations_specialization_id )
        REFERENCES specializations ( specialization_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE student_special
    ADD CONSTRAINT student_special_specializations_fk FOREIGN KEY ( specializations_specialization_id )
        REFERENCES specializations ( specialization_id );

ALTER TABLE student_special
    ADD CONSTRAINT student_special_students_fk FOREIGN KEY ( students_user_id )
        REFERENCES students ( user_id );

ALTER TABLE users
    ADD CONSTRAINT users_lecturers_fk FOREIGN KEY ( lecturers_lecture_id )
        REFERENCES lecturers ( lecture_id );

ALTER TABLE users
    ADD CONSTRAINT users_roles_fk FOREIGN KEY ( roles_role_id )
        REFERENCES roles ( role_id );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            15
-- CREATE INDEX                             1
-- ALTER TABLE                             34
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   9
-- WARNINGS                                 0
