-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2025-03-10 15:47:55 CET
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE buildings (
    building_id INTEGER NOT NULL,
    name        VARCHAR2(100) NOT NULL
);

ALTER TABLE buildings ADD CONSTRAINT buildings_pk PRIMARY KEY ( building_id );

CREATE TABLE classes (
    class_id                     INTEGER NOT NULL,
    time                         DATE NOT NULL,
    day_of_week                  INTEGER NOT NULL,
    group_nr                     INTEGER NOT NULL,
    course_types_coursee_type_id INTEGER,
    students_student_id          INTEGER,
    courses_course_id            INTEGER
);

ALTER TABLE classes ADD CONSTRAINT classes_pk PRIMARY KEY ( class_id );

CREATE TABLE classes_classrooms (
    classes_class_id        INTEGER NOT NULL,
    classrooms_classroom_id INTEGER NOT NULL
);

ALTER TABLE classes_classrooms ADD CONSTRAINT classes_classrooms_pk PRIMARY KEY ( classes_class_id,
                                                                                  classrooms_classroom_id );

CREATE TABLE classrooms (
    classroom_id INTEGER NOT NULL,
    "number"     INTEGER NOT NULL
);

ALTER TABLE classrooms ADD CONSTRAINT classrooms_pk PRIMARY KEY ( classroom_id );

CREATE TABLE classrooms_buildings (
    classrooms_classroom_id INTEGER NOT NULL,
    buildings_building_id   INTEGER NOT NULL
);

ALTER TABLE classrooms_buildings ADD CONSTRAINT classrooms_buildings_pk PRIMARY KEY ( classrooms_classroom_id,
                                                                                      buildings_building_id );

CREATE TABLE completion_requirements (
    completion_req_id                     INTEGER NOT NULL,
    min_score                             INTEGER NOT NULL,
    is_mandatory                          NUMBER,
--  ERROR: Column name length exceeds maximum allowed length(30)
    requirement_types_requirement_type_id INTEGER
);

ALTER TABLE completion_requirements ADD CONSTRAINT completion_requirements_pk PRIMARY KEY ( completion_req_id );

CREATE TABLE course_compl_requirement (
    courses_course_id                         INTEGER NOT NULL,
--  ERROR: Column name length exceeds maximum allowed length(30)
    completion_requirements_completion_req_id INTEGER NOT NULL
);

ALTER TABLE course_compl_requirement ADD CONSTRAINT course_compl_requirement_pk PRIMARY KEY ( courses_course_id,
                                                                                              completion_requirements_completion_req_id
                                                                                              );

CREATE TABLE course_registrations (
    course_reg_id     INTEGER NOT NULL,
    status            NUMBER NOT NULL,
    courses_course_id INTEGER NOT NULL
);

ALTER TABLE course_registrations ADD CONSTRAINT course_registrations_pk PRIMARY KEY ( course_reg_id );

CREATE TABLE course_specializations (
    courses_course_id                 INTEGER NOT NULL,
--  ERROR: Column name length exceeds maximum allowed length(30)
    specializations_specialization_id INTEGER NOT NULL
);

ALTER TABLE course_specializations ADD CONSTRAINT course_specializations_pk PRIMARY KEY ( courses_course_id,
                                                                                          specializations_specialization_id );

CREATE TABLE course_types (
    coursee_type_id INTEGER NOT NULL,
    name            VARCHAR2(100) NOT NULL
);

ALTER TABLE course_types ADD CONSTRAINT course_types_pk PRIMARY KEY ( coursee_type_id );

CREATE TABLE courses (
    course_id   INTEGER NOT NULL,
    name        VARCHAR2(50) NOT NULL,
    ects_points INTEGER NOT NULL
);

ALTER TABLE courses ADD CONSTRAINT courses_pk PRIMARY KEY ( course_id );

CREATE TABLE exam_registrations (
    exam_reg_id         INTEGER NOT NULL,
    students_student_id INTEGER,
    exams_exam_id       INTEGER NOT NULL
);

ALTER TABLE exam_registrations ADD CONSTRAINT exam_registrations_pk PRIMARY KEY ( exam_reg_id );

CREATE TABLE exams (
    exam_id           INTEGER NOT NULL,
    exam_date         DATE NOT NULL,
    courses_course_id INTEGER
);

ALTER TABLE exams ADD CONSTRAINT exams_pk PRIMARY KEY ( exam_id );

CREATE TABLE exams_classrooms (
    classrooms_classroom_id INTEGER NOT NULL,
    exams_exam_id           INTEGER NOT NULL
);

ALTER TABLE exams_classrooms ADD CONSTRAINT exams_classrooms_pk PRIMARY KEY ( classrooms_classroom_id,
                                                                              exams_exam_id );

CREATE TABLE forms (
    form_id             INTEGER NOT NULL,
    rating              INTEGER NOT NULL,
    feedback            VARCHAR2(1000),
    submission_date     DATE,
    courses_course_id   INTEGER,
    students_student_id INTEGER
);

ALTER TABLE forms ADD CONSTRAINT forms_pk PRIMARY KEY ( form_id );

CREATE TABLE grades (
    grade_id             INTEGER NOT NULL,
    grade                INTEGER NOT NULL,
    recorded_date        DATE,
    lecturers_lecture_id INTEGER,
    courses_course_id    INTEGER,
    students_student_id  INTEGER
);

ALTER TABLE grades ADD CONSTRAINT grades_pk PRIMARY KEY ( grade_id );

CREATE TABLE lecture_courses (
    lecturers_lecture_id INTEGER NOT NULL,
    courses_course_id    INTEGER NOT NULL
);

ALTER TABLE lecture_courses ADD CONSTRAINT lecture_courses_pk PRIMARY KEY ( lecturers_lecture_id,
                                                                            courses_course_id );

CREATE TABLE lecturers (
    lecture_id     INTEGER NOT NULL,
    academic_title VARCHAR2(80),
    users_user_id  INTEGER
);

CREATE UNIQUE INDEX lecturers__idx ON
    lecturers (
        users_user_id
    ASC );

ALTER TABLE lecturers ADD CONSTRAINT lecturers_pk PRIMARY KEY ( lecture_id );

CREATE TABLE requirement_types (
    requirement_type_id INTEGER NOT NULL,
    name                VARCHAR2(50) NOT NULL
);

ALTER TABLE requirement_types ADD CONSTRAINT requirement_types_pk PRIMARY KEY ( requirement_type_id );

CREATE TABLE roles (
    role_id INTEGER NOT NULL,
    name    VARCHAR2(50) NOT NULL
);

ALTER TABLE roles ADD CONSTRAINT roles_pk PRIMARY KEY ( role_id );

CREATE TABLE semester_ects (
    semestr_ects_id                   INTEGER NOT NULL,
    semestr                           INTEGER NOT NULL,
    ects_number                       INTEGER,
    specializations_specialization_id INTEGER NOT NULL
);

ALTER TABLE semester_ects ADD CONSTRAINT semester_ects_pk PRIMARY KEY ( semestr_ects_id );

CREATE TABLE specializations (
    specialization_id INTEGER NOT NULL,
    name              VARCHAR2(50) NOT NULL
);

ALTER TABLE specializations ADD CONSTRAINT specializations_pk PRIMARY KEY ( specialization_id );

CREATE TABLE student_specialization (
    students_student_id               INTEGER NOT NULL,
--  ERROR: Column name length exceeds maximum allowed length(30)
    specializations_specialization_id INTEGER NOT NULL
);

ALTER TABLE student_specialization ADD CONSTRAINT student_specialization_pk PRIMARY KEY ( students_student_id,
                                                                                          specializations_specialization_id );

CREATE TABLE students (
    student_id          INTEGER NOT NULL,
    student_number      VARCHAR2(50) NOT NULL,
    status              NUMBER NOT NULL,
    library_card_number VARCHAR2(50),
    users_user_id       INTEGER
);

CREATE UNIQUE INDEX students__idx ON
    students (
        users_user_id
    ASC );

ALTER TABLE students ADD CONSTRAINT students_pk PRIMARY KEY ( student_id );

CREATE TABLE users (
    user_id              INTEGER NOT NULL,
    first_name           VARCHAR2(50) NOT NULL,
    last_name            VARCHAR2(50) NOT NULL,
    email                VARCHAR2(50) NOT NULL,
    password             VARCHAR2(50) NOT NULL,
    roles_role_id        INTEGER,
    students_student_id  INTEGER,
    lecturers_lecture_id INTEGER
);

CREATE UNIQUE INDEX users__idx ON
    users (
        lecturers_lecture_id
    ASC );

CREATE UNIQUE INDEX users__idxv1 ON
    users (
        students_student_id
    ASC );

ALTER TABLE users ADD CONSTRAINT users_pk PRIMARY KEY ( user_id );

ALTER TABLE classes_classrooms
    ADD CONSTRAINT classes_classrooms_classes_fk FOREIGN KEY ( classes_class_id )
        REFERENCES classes ( class_id );

ALTER TABLE classes_classrooms
    ADD CONSTRAINT classes_classrooms_classrooms_fk FOREIGN KEY ( classrooms_classroom_id )
        REFERENCES classrooms ( classroom_id );

ALTER TABLE classes
    ADD CONSTRAINT classes_course_types_fk FOREIGN KEY ( course_types_coursee_type_id )
        REFERENCES course_types ( coursee_type_id );

ALTER TABLE classes
    ADD CONSTRAINT classes_courses_fk FOREIGN KEY ( courses_course_id )
        REFERENCES courses ( course_id );

ALTER TABLE classes
    ADD CONSTRAINT classes_students_fk FOREIGN KEY ( students_student_id )
        REFERENCES students ( student_id );


ALTER TABLE classrooms_buildings
    ADD CONSTRAINT classrooms_buildings_buildings_fk FOREIGN KEY ( buildings_building_id )
        REFERENCES buildings ( building_id );


ALTER TABLE classrooms_buildings
    ADD CONSTRAINT classrooms_buildings_classrooms_fk FOREIGN KEY ( classrooms_classroom_id )
        REFERENCES classrooms ( classroom_id );


ALTER TABLE completion_requirements
    ADD CONSTRAINT completion_requirements_requirement_types_fk FOREIGN KEY ( requirement_types_requirement_type_id )
        REFERENCES requirement_types ( requirement_type_id );


ALTER TABLE course_compl_requirement
    ADD CONSTRAINT course_compl_requirement_completion_requirements_fk FOREIGN KEY ( completion_requirements_completion_req_id )
        REFERENCES completion_requirements ( completion_req_id );


ALTER TABLE course_compl_requirement
    ADD CONSTRAINT course_compl_requirement_courses_fk FOREIGN KEY ( courses_course_id )
        REFERENCES courses ( course_id );

ALTER TABLE course_registrations
    ADD CONSTRAINT course_registrations_courses_fk FOREIGN KEY ( courses_course_id )
        REFERENCES courses ( course_id );

ALTER TABLE course_specializations
    ADD CONSTRAINT course_specializations_courses_fk FOREIGN KEY ( courses_course_id )
        REFERENCES courses ( course_id );

ALTER TABLE course_specializations
    ADD CONSTRAINT course_specializations_specializations_fk FOREIGN KEY ( specializations_specialization_id )
        REFERENCES specializations ( specialization_id );

ALTER TABLE exam_registrations
    ADD CONSTRAINT exam_registrations_exams_fk FOREIGN KEY ( exams_exam_id )
        REFERENCES exams ( exam_id );

ALTER TABLE exam_registrations
    ADD CONSTRAINT exam_registrations_students_fk FOREIGN KEY ( students_student_id )
        REFERENCES students ( student_id );

ALTER TABLE exams_classrooms
    ADD CONSTRAINT exams_classrooms_classrooms_fk FOREIGN KEY ( classrooms_classroom_id )
        REFERENCES classrooms ( classroom_id );

ALTER TABLE exams_classrooms
    ADD CONSTRAINT exams_classrooms_exams_fk FOREIGN KEY ( exams_exam_id )
        REFERENCES exams ( exam_id );

ALTER TABLE exams
    ADD CONSTRAINT exams_courses_fk FOREIGN KEY ( courses_course_id )
        REFERENCES courses ( course_id );

ALTER TABLE forms
    ADD CONSTRAINT forms_courses_fk FOREIGN KEY ( courses_course_id )
        REFERENCES courses ( course_id );

ALTER TABLE forms
    ADD CONSTRAINT forms_students_fk FOREIGN KEY ( students_student_id )
        REFERENCES students ( student_id );

ALTER TABLE grades
    ADD CONSTRAINT grades_courses_fk FOREIGN KEY ( courses_course_id )
        REFERENCES courses ( course_id );

ALTER TABLE grades
    ADD CONSTRAINT grades_lecturers_fk FOREIGN KEY ( lecturers_lecture_id )
        REFERENCES lecturers ( lecture_id );

ALTER TABLE grades
    ADD CONSTRAINT grades_students_fk FOREIGN KEY ( students_student_id )
        REFERENCES students ( student_id );

ALTER TABLE lecture_courses
    ADD CONSTRAINT lecture_courses_courses_fk FOREIGN KEY ( courses_course_id )
        REFERENCES courses ( course_id );

ALTER TABLE lecture_courses
    ADD CONSTRAINT lecture_courses_lecturers_fk FOREIGN KEY ( lecturers_lecture_id )
        REFERENCES lecturers ( lecture_id );

ALTER TABLE lecturers
    ADD CONSTRAINT lecturers_users_fk FOREIGN KEY ( users_user_id )
        REFERENCES users ( user_id );


ALTER TABLE semester_ects
    ADD CONSTRAINT semester_ects_specializations_fk FOREIGN KEY ( specializations_specialization_id )
        REFERENCES specializations ( specialization_id );


ALTER TABLE student_specialization
    ADD CONSTRAINT student_specialization_specializations_fk FOREIGN KEY ( specializations_specialization_id )
        REFERENCES specializations ( specialization_id );


ALTER TABLE student_specialization
    ADD CONSTRAINT student_specialization_students_fk FOREIGN KEY ( students_student_id )
        REFERENCES students ( student_id );

ALTER TABLE students
    ADD CONSTRAINT students_users_fk FOREIGN KEY ( users_user_id )
        REFERENCES users ( user_id );

ALTER TABLE users
    ADD CONSTRAINT users_lecturers_fk FOREIGN KEY ( lecturers_lecture_id )
        REFERENCES lecturers ( lecture_id );

ALTER TABLE users
    ADD CONSTRAINT users_roles_fk FOREIGN KEY ( roles_role_id )
        REFERENCES roles ( role_id );

ALTER TABLE users
    ADD CONSTRAINT users_students_fk FOREIGN KEY ( students_student_id )
        REFERENCES students ( student_id );



-- Oracle SQL Developer Data Modeler Summary Report:
--
-- CREATE TABLE                            25
-- CREATE INDEX                             4
-- ALTER TABLE                             58
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
--
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
--
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
--
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
--
-- ERRORS                                   0
-- WARNINGS                                 0
